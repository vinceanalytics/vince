// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        (unknown)
// source: vince/v1/vince.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Resolution int32

const (
	Resolution_Global Resolution = 0
	Resolution_Minute Resolution = 1
	Resolution_Hour   Resolution = 2
	Resolution_Day    Resolution = 3
	Resolution_Week   Resolution = 4
	Resolution_Month  Resolution = 5
)

// Enum value maps for Resolution.
var (
	Resolution_name = map[int32]string{
		0: "Global",
		1: "Minute",
		2: "Hour",
		3: "Day",
		4: "Week",
		5: "Month",
	}
	Resolution_value = map[string]int32{
		"Global": 0,
		"Minute": 1,
		"Hour":   2,
		"Day":    3,
		"Week":   4,
		"Month":  5,
	}
)

func (x Resolution) Enum() *Resolution {
	p := new(Resolution)
	*p = x
	return p
}

func (x Resolution) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Resolution) Descriptor() protoreflect.EnumDescriptor {
	return file_vince_v1_vince_proto_enumTypes[0].Descriptor()
}

func (Resolution) Type() protoreflect.EnumType {
	return &file_vince_v1_vince_proto_enumTypes[0]
}

func (x Resolution) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Resolution.Descriptor instead.
func (Resolution) EnumDescriptor() ([]byte, []int) {
	return file_vince_v1_vince_proto_rawDescGZIP(), []int{0}
}

type Prefix int32

const (
	Prefix_Data         Prefix = 0
	Prefix_DataExists   Prefix = 1
	Prefix_Cookie       Prefix = 2
	Prefix_SITE         Prefix = 3
	Prefix_Acme         Prefix = 4
	Prefix_APIKeyName   Prefix = 5
	Prefix_APIKeyHash   Prefix = 6
	Prefix_TranslateKey Prefix = 7
	Prefix_TranslateID  Prefix = 8
	Prefix_TranslateSeq Prefix = 9
	Prefix_CountryCode  Prefix = 10
	Prefix_RegionCode   Prefix = 11
	Prefix_RegionName   Prefix = 12
	Prefix_CityName     Prefix = 13
	Prefix_CityCode     Prefix = 14
	Prefix_Referral     Prefix = 15
	Prefix_ADMIN        Prefix = 16
)

// Enum value maps for Prefix.
var (
	Prefix_name = map[int32]string{
		0:  "Data",
		1:  "DataExists",
		2:  "Cookie",
		3:  "SITE",
		4:  "Acme",
		5:  "APIKeyName",
		6:  "APIKeyHash",
		7:  "TranslateKey",
		8:  "TranslateID",
		9:  "TranslateSeq",
		10: "CountryCode",
		11: "RegionCode",
		12: "RegionName",
		13: "CityName",
		14: "CityCode",
		15: "Referral",
		16: "ADMIN",
	}
	Prefix_value = map[string]int32{
		"Data":         0,
		"DataExists":   1,
		"Cookie":       2,
		"SITE":         3,
		"Acme":         4,
		"APIKeyName":   5,
		"APIKeyHash":   6,
		"TranslateKey": 7,
		"TranslateID":  8,
		"TranslateSeq": 9,
		"CountryCode":  10,
		"RegionCode":   11,
		"RegionName":   12,
		"CityName":     13,
		"CityCode":     14,
		"Referral":     15,
		"ADMIN":        16,
	}
)

func (x Prefix) Enum() *Prefix {
	p := new(Prefix)
	*p = x
	return p
}

func (x Prefix) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Prefix) Descriptor() protoreflect.EnumDescriptor {
	return file_vince_v1_vince_proto_enumTypes[1].Descriptor()
}

func (Prefix) Type() protoreflect.EnumType {
	return &file_vince_v1_vince_proto_enumTypes[1]
}

func (x Prefix) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Prefix.Descriptor instead.
func (Prefix) EnumDescriptor() ([]byte, []int) {
	return file_vince_v1_vince_proto_rawDescGZIP(), []int{1}
}

type Field int32

const (
	Field_unknown           Field = 0
	Field_domain            Field = 1
	Field_browser           Field = 2
	Field_browser_version   Field = 3
	Field_country           Field = 4
	Field_device            Field = 5
	Field_entry_page        Field = 6
	Field_event             Field = 7
	Field_exit_page         Field = 8
	Field_host              Field = 9
	Field_os                Field = 10
	Field_os_version        Field = 11
	Field_page              Field = 12
	Field_referrer          Field = 13
	Field_source            Field = 14
	Field_utm_campaign      Field = 15
	Field_utm_content       Field = 16
	Field_utm_medium        Field = 17
	Field_utm_source        Field = 18
	Field_utm_term          Field = 19
	Field_subdivision1_code Field = 20
	Field_subdivision2_code Field = 21
	Field_city              Field = 22
	Field_view              Field = 23
	Field_session           Field = 24
	Field_timestamp         Field = 25
	Field_id                Field = 26
	Field_bounce            Field = 27
	Field_minute            Field = 28
	Field_hour              Field = 29
	Field_day               Field = 30
	Field_week              Field = 31
	Field_month             Field = 32
	Field_duration          Field = 33
)

// Enum value maps for Field.
var (
	Field_name = map[int32]string{
		0:  "unknown",
		1:  "domain",
		2:  "browser",
		3:  "browser_version",
		4:  "country",
		5:  "device",
		6:  "entry_page",
		7:  "event",
		8:  "exit_page",
		9:  "host",
		10: "os",
		11: "os_version",
		12: "page",
		13: "referrer",
		14: "source",
		15: "utm_campaign",
		16: "utm_content",
		17: "utm_medium",
		18: "utm_source",
		19: "utm_term",
		20: "subdivision1_code",
		21: "subdivision2_code",
		22: "city",
		23: "view",
		24: "session",
		25: "timestamp",
		26: "id",
		27: "bounce",
		28: "minute",
		29: "hour",
		30: "day",
		31: "week",
		32: "month",
		33: "duration",
	}
	Field_value = map[string]int32{
		"unknown":           0,
		"domain":            1,
		"browser":           2,
		"browser_version":   3,
		"country":           4,
		"device":            5,
		"entry_page":        6,
		"event":             7,
		"exit_page":         8,
		"host":              9,
		"os":                10,
		"os_version":        11,
		"page":              12,
		"referrer":          13,
		"source":            14,
		"utm_campaign":      15,
		"utm_content":       16,
		"utm_medium":        17,
		"utm_source":        18,
		"utm_term":          19,
		"subdivision1_code": 20,
		"subdivision2_code": 21,
		"city":              22,
		"view":              23,
		"session":           24,
		"timestamp":         25,
		"id":                26,
		"bounce":            27,
		"minute":            28,
		"hour":              29,
		"day":               30,
		"week":              31,
		"month":             32,
		"duration":          33,
	}
)

func (x Field) Enum() *Field {
	p := new(Field)
	*p = x
	return p
}

func (x Field) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Field) Descriptor() protoreflect.EnumDescriptor {
	return file_vince_v1_vince_proto_enumTypes[2].Descriptor()
}

func (Field) Type() protoreflect.EnumType {
	return &file_vince_v1_vince_proto_enumTypes[2]
}

func (x Field) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Field.Descriptor instead.
func (Field) EnumDescriptor() ([]byte, []int) {
	return file_vince_v1_vince_proto_rawDescGZIP(), []int{2}
}

type APIKey struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Prefix        string                 `protobuf:"bytes,2,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Hash          []byte                 `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *APIKey) Reset() {
	*x = APIKey{}
	mi := &file_vince_v1_vince_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *APIKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIKey) ProtoMessage() {}

func (x *APIKey) ProtoReflect() protoreflect.Message {
	mi := &file_vince_v1_vince_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIKey.ProtoReflect.Descriptor instead.
func (*APIKey) Descriptor() ([]byte, []int) {
	return file_vince_v1_vince_proto_rawDescGZIP(), []int{0}
}

func (x *APIKey) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *APIKey) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *APIKey) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

var File_vince_v1_vince_proto protoreflect.FileDescriptor

var file_vince_v1_vince_proto_rawDesc = []byte{
	0x0a, 0x14, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x69, 0x6e, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76, 0x31, 0x22, 0x48, 0x0a, 0x06, 0x41, 0x50,
	0x49, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x68, 0x61, 0x73, 0x68, 0x2a, 0x4c, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x0a, 0x0a, 0x06, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x10, 0x00, 0x12, 0x0a,
	0x0a, 0x06, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x6f,
	0x75, 0x72, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x44, 0x61, 0x79, 0x10, 0x03, 0x12, 0x08, 0x0a,
	0x04, 0x57, 0x65, 0x65, 0x6b, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x6f, 0x6e, 0x74, 0x68,
	0x10, 0x05, 0x2a, 0xfd, 0x01, 0x0a, 0x06, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x08, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x61, 0x74, 0x61, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x73, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x6f, 0x6f, 0x6b, 0x69,
	0x65, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x49, 0x54, 0x45, 0x10, 0x03, 0x12, 0x08, 0x0a,
	0x04, 0x41, 0x63, 0x6d, 0x65, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x50, 0x49, 0x4b, 0x65,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x10, 0x05, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x50, 0x49, 0x4b, 0x65,
	0x79, 0x48, 0x61, 0x73, 0x68, 0x10, 0x06, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x6c, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x10, 0x07, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x44, 0x10, 0x08, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x65, 0x71, 0x10, 0x09, 0x12, 0x0f, 0x0a, 0x0b,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x10, 0x0a, 0x12, 0x0e, 0x0a,
	0x0a, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x10, 0x0b, 0x12, 0x0e, 0x0a,
	0x0a, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x10, 0x0c, 0x12, 0x0c, 0x0a,
	0x08, 0x43, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x10, 0x0d, 0x12, 0x0c, 0x0a, 0x08, 0x43,
	0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x10, 0x0e, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x72, 0x61, 0x6c, 0x10, 0x0f, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x44, 0x4d, 0x49, 0x4e,
	0x10, 0x10, 0x2a, 0xd0, 0x03, 0x0a, 0x05, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x0b, 0x0a, 0x07,
	0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72,
	0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x10, 0x05,
	0x12, 0x0e, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x10, 0x06,
	0x12, 0x09, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x07, 0x12, 0x0d, 0x0a, 0x09, 0x65,
	0x78, 0x69, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x10, 0x08, 0x12, 0x08, 0x0a, 0x04, 0x68, 0x6f,
	0x73, 0x74, 0x10, 0x09, 0x12, 0x06, 0x0a, 0x02, 0x6f, 0x73, 0x10, 0x0a, 0x12, 0x0e, 0x0a, 0x0a,
	0x6f, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x10, 0x0b, 0x12, 0x08, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x10, 0x0c, 0x12, 0x0c, 0x0a, 0x08, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72,
	0x65, 0x72, 0x10, 0x0d, 0x12, 0x0a, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x10, 0x0e,
	0x12, 0x10, 0x0a, 0x0c, 0x75, 0x74, 0x6d, 0x5f, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e,
	0x10, 0x0f, 0x12, 0x0f, 0x0a, 0x0b, 0x75, 0x74, 0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x10, 0x10, 0x12, 0x0e, 0x0a, 0x0a, 0x75, 0x74, 0x6d, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x75,
	0x6d, 0x10, 0x11, 0x12, 0x0e, 0x0a, 0x0a, 0x75, 0x74, 0x6d, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x10, 0x12, 0x12, 0x0c, 0x0a, 0x08, 0x75, 0x74, 0x6d, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x10,
	0x13, 0x12, 0x15, 0x0a, 0x11, 0x73, 0x75, 0x62, 0x64, 0x69, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x31, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x10, 0x14, 0x12, 0x15, 0x0a, 0x11, 0x73, 0x75, 0x62, 0x64,
	0x69, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x32, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x10, 0x15, 0x12,
	0x08, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x10, 0x16, 0x12, 0x08, 0x0a, 0x04, 0x76, 0x69, 0x65,
	0x77, 0x10, 0x17, 0x12, 0x0b, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x10, 0x18,
	0x12, 0x0d, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x10, 0x19, 0x12,
	0x06, 0x0a, 0x02, 0x69, 0x64, 0x10, 0x1a, 0x12, 0x0a, 0x0a, 0x06, 0x62, 0x6f, 0x75, 0x6e, 0x63,
	0x65, 0x10, 0x1b, 0x12, 0x0a, 0x0a, 0x06, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x10, 0x1c, 0x12,
	0x08, 0x0a, 0x04, 0x68, 0x6f, 0x75, 0x72, 0x10, 0x1d, 0x12, 0x07, 0x0a, 0x03, 0x64, 0x61, 0x79,
	0x10, 0x1e, 0x12, 0x08, 0x0a, 0x04, 0x77, 0x65, 0x65, 0x6b, 0x10, 0x1f, 0x12, 0x09, 0x0a, 0x05,
	0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x10, 0x20, 0x12, 0x0c, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x10, 0x21, 0x42, 0x6d, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x42,
	0x0a, 0x56, 0x69, 0x6e, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2f, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x61,
	0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x2f, 0x67,
	0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x2f, 0x76, 0x31, 0xa2, 0x02,
	0x03, 0x56, 0x58, 0x58, 0xaa, 0x02, 0x02, 0x56, 0x31, 0xca, 0x02, 0x02, 0x56, 0x31, 0xe2, 0x02,
	0x0e, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x02, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_vince_v1_vince_proto_rawDescOnce sync.Once
	file_vince_v1_vince_proto_rawDescData = file_vince_v1_vince_proto_rawDesc
)

func file_vince_v1_vince_proto_rawDescGZIP() []byte {
	file_vince_v1_vince_proto_rawDescOnce.Do(func() {
		file_vince_v1_vince_proto_rawDescData = protoimpl.X.CompressGZIP(file_vince_v1_vince_proto_rawDescData)
	})
	return file_vince_v1_vince_proto_rawDescData
}

var file_vince_v1_vince_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_vince_v1_vince_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_vince_v1_vince_proto_goTypes = []any{
	(Resolution)(0), // 0: v1.Resolution
	(Prefix)(0),     // 1: v1.Prefix
	(Field)(0),      // 2: v1.Field
	(*APIKey)(nil),  // 3: v1.APIKey
}
var file_vince_v1_vince_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_vince_v1_vince_proto_init() }
func file_vince_v1_vince_proto_init() {
	if File_vince_v1_vince_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vince_v1_vince_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_vince_v1_vince_proto_goTypes,
		DependencyIndexes: file_vince_v1_vince_proto_depIdxs,
		EnumInfos:         file_vince_v1_vince_proto_enumTypes,
		MessageInfos:      file_vince_v1_vince_proto_msgTypes,
	}.Build()
	File_vince_v1_vince_proto = out.File
	file_vince_v1_vince_proto_rawDesc = nil
	file_vince_v1_vince_proto_goTypes = nil
	file_vince_v1_vince_proto_depIdxs = nil
}
